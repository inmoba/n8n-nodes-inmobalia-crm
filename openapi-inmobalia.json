{
	"openapi": "3.0.1",
	"info": {
		"title": "Inmobalia CRM API",
		"contact": {
			"name": "Inmoba",
			"url": "https://www.inmoba.com",
			"email": "support@inmoba.com"
		},
		"version": "v1"
	},
	"servers": [
		{
			"url": "https://api-crm.inmobalia.com",
			"description": "Generated server url"
		}
	],
	"security": [
		{
			"authorization": []
		}
	],
	"tags": [
		{
			"name": "Activities Types"
		},
		{
			"name": "Properties"
		},
		{
			"name": "Sale Stages"
		},
		{
			"name": "Events"
		},
		{
			"name": "Property Categories"
		},
		{
			"name": "Property Tags"
		},
		{
			"name": "Users"
		},
		{
			"name": "Web Leads"
		},
		{
			"name": "Property Features"
		},
		{
			"name": "Bookings"
		},
		{
			"name": "Sales"
		},
		{
			"name": "Locations"
		},
		{
			"name": "Contacts Sources"
		},
		{
			"name": "Enquiries"
		},
		{
			"name": "Contacts Lead Status"
		},
		{
			"name": "Contacts"
		},
		{
			"name": "Activities"
		},
		{
			"name": "Contacts Tags"
		},
		{
			"name": "Property Types"
		}
	],
	"paths": {
		"/v1/web-leads/{webLeadId}/processed": {
			"put": {
				"tags": [
					"Web Leads"
				],
				"summary": "Set a WebLead as processed",
				"operationId": "processed",
				"parameters": [
					{
						"name": "webLeadId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WebLeadProcessedDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WebLeadResponseDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds a property by ID",
				"description": "Returns a single property",
				"operationId": "findById_2",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Properties"
				],
				"summary": "Update property",
				"operationId": "update",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyUpdateDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Properties"
				],
				"summary": "Partial Updates property",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the PropertySaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "update_10",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/links/{linkId}": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds a link from a property",
				"description": "Returns a single link",
				"operationId": "findLink",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "linkId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyLinkDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Properties"
				],
				"summary": "Update one link by property",
				"operationId": "update_1",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "linkId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyLinkSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyLinkDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Properties"
				],
				"summary": "Partial Updates link by property",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the PropertyLinkSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "partialUpdate",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "linkId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyLinkDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/images/{imageId}": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds an image from a property",
				"description": "Returns a single image",
				"operationId": "findImage",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "imageId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyImageDTO"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Properties"
				],
				"summary": "Update one image by property",
				"operationId": "update_2",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "imageId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyImageSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyImageDTO"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Properties"
				],
				"summary": "Partial Updates image by property",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the PropertyImageSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "partialUpdate_1",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "imageId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyImageDTO"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/files/{fileId}": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds a file from a property",
				"description": "Returns a single file",
				"operationId": "findFile",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyFileDTO"
								}
							}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Properties"
				],
				"summary": "Update one file by property",
				"operationId": "update_3",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyFileSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyFileDTO"
								}
							}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Properties"
				],
				"summary": "Partial Updates file by property",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the PropertyFileSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "partialUpdate_2",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyFileDTO"
								}
							}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/descriptions/{language}": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds a description by property and language",
				"description": "Returns a single description",
				"operationId": "findDescription",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "language",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyDescriptionDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Properties"
				],
				"summary": "Update a description by property",
				"operationId": "update_4",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "language",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyDescriptionSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyDescriptionDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Properties"
				],
				"summary": "Add a description by property",
				"operationId": "create_5",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "language",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyDescriptionSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyDescriptionDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Properties"
				],
				"summary": "Partial Updates description by property",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the PropertyDescriptionSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "partialUpdate_3",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "language",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyDescriptionDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/{contactId}": {
			"get": {
				"tags": [
					"Contacts"
				],
				"summary": "Find contact by ID",
				"description": "Returns a single contact",
				"operationId": "findById_12",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactResponseDTO"
								}
							}
						}
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Contacts"
				],
				"summary": "Update contact",
				"operationId": "update_5",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ContactSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactResponseDTO"
								}
							}
						}
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Contacts"
				],
				"summary": "Partial Updates contact",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the ContactSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "update_11",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactResponseDTO"
								}
							}
						}
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/{contactId}/files/{fileId}": {
			"get": {
				"tags": [
					"Contacts"
				],
				"summary": "Find a file by contact ID",
				"operationId": "findFile_1",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactFileDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Contacts"
				],
				"summary": "Update a file by contact ID",
				"operationId": "update_6",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ContactFileSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactFileDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Contacts"
				],
				"summary": "Partial Updates file by contact ID",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the ContactFileSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "update_12",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "fileId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactFileDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/{contactId}/additionals/{additionalAddressId}": {
			"get": {
				"tags": [
					"Contacts"
				],
				"summary": "Find a additional address by contact ID",
				"operationId": "findAdditional",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "additionalAddressId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactAdditionalDTO"
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Contacts"
				],
				"summary": "Update a additional address by contact ID",
				"operationId": "update_7",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "additionalAddressId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ContactAdditionalSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactAdditionalDTO"
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Contacts"
				],
				"summary": "Partial Updates contact by contact ID",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the ContactAdditionalSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "update_13",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "additionalAddressId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactAdditionalDTO"
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/activities/{activityId}": {
			"get": {
				"tags": [
					"Activities"
				],
				"summary": "Find activity by ID",
				"description": "Returns a single activity",
				"operationId": "findById_13",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityResponseDTO"
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Activities"
				],
				"summary": "Update activity",
				"operationId": "update_8",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ActivitySaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityResponseDTO"
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Activities"
				],
				"summary": "Partial Updates activity",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the ActivitySaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "update_14",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityResponseDTO"
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/activities/{activityId}/event": {
			"get": {
				"tags": [
					"Activities"
				],
				"summary": "Find event by activity ID",
				"description": "Returns activity event",
				"operationId": "findEvent",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityEventDTO"
								}
							}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				},
				"deprecated": true
			},
			"put": {
				"tags": [
					"Activities"
				],
				"summary": "Update activity event",
				"operationId": "update_9",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ActivityEventSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityEventDTO"
								}
							}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				},
				"deprecated": true
			},
			"post": {
				"tags": [
					"Activities"
				],
				"summary": "Add event to activity",
				"operationId": "add",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ActivityEventSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityEventDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				},
				"deprecated": true
			},
			"patch": {
				"tags": [
					"Activities"
				],
				"summary": "Partial Updates activity event",
				"description": "A JSONPatch document as defined by RFC 6902 applied in the ActivityEventSaveDTO schema, more information at [jsonpatch.com](http://jsonpatch.com/)",
				"operationId": "update_15",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json-patch+json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityEventDTO"
								}
							}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				},
				"deprecated": true
			}
		},
		"/v1/web-leads": {
			"get": {
				"tags": [
					"Web Leads"
				],
				"summary": "Page of Web Lead",
				"operationId": "page",
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"PENDING",
								"PROCESSED"
							]
						}
					},
					{
						"name": "fromDate",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDate",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WebLeadPageDTO"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Web Leads"
				],
				"summary": "Create a Web Lead",
				"operationId": "create",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WebLeadCreateDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WebLeadResponseDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Page of properties",
				"operationId": "page_2",
				"parameters": [
					{
						"name": "fromDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "countryIso",
						"in": "query",
						"description": "Country ISO code",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "statusPublish",
						"in": "query",
						"description": "List of property publish statuses",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyPageDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Properties"
				],
				"summary": "Create property",
				"operationId": "create_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyCreateDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyResponseDTO"
								}
							}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/links": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds all links for a property",
				"description": "Returns a list of links",
				"operationId": "findLinks",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyLinkDTO"
									}
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Properties"
				],
				"summary": "Add one link by property",
				"operationId": "create_2",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PropertyLinkSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyLinkDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/images": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds all images for a property",
				"description": "Returns a list of images",
				"operationId": "findImages",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyImageDTO"
									}
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Properties"
				],
				"summary": "Add one image by property",
				"operationId": "create_3",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PropertyImageUploadDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyImageDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/files": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds all files for a property",
				"description": "Returns a list of files",
				"operationId": "findFiles",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyFileDTO"
									}
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Properties"
				],
				"summary": "Add one file by property",
				"operationId": "create_4",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/PropertyFileUploadDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyFileDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts": {
			"get": {
				"tags": [
					"Contacts"
				],
				"summary": "Page of contacts",
				"operationId": "page_5",
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "email"
						}
					},
					{
						"name": "phone",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailAndPhoneAsOr",
						"in": "query",
						"description": "email and phone fields are used as OR",
						"required": false,
						"schema": {
							"type": "boolean",
							"default": false
						}
					},
					{
						"name": "fromDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "archived",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactPageDTO"
								}
							}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Contacts"
				],
				"summary": "Create contact",
				"operationId": "create_6",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ContactSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"409": {
						"description": "Conflict"
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/{contactId}/files": {
			"get": {
				"tags": [
					"Contacts"
				],
				"summary": "Find files by contact ID",
				"description": "Returns list of files",
				"operationId": "findFiles_1",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ContactFileDTO"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Contacts"
				],
				"summary": "Add a file by contact ID",
				"operationId": "upload",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/ContactFileUploadDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactFileDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/{contactId}/additionals": {
			"get": {
				"tags": [
					"Contacts"
				],
				"summary": "Find additionals address by contact ID",
				"operationId": "findAdditionals",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ContactAdditionalDTO"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Contacts"
				],
				"summary": "Add a additional address by contact ID",
				"operationId": "create_7",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ContactAdditionalSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ContactAdditionalDTO"
								}
							}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/activities": {
			"get": {
				"tags": [
					"Activities"
				],
				"summary": "Page of activities",
				"operationId": "page_7",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "fromDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityPageDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Activities"
				],
				"summary": "Create activity",
				"operationId": "create_8",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ActivitySaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityResponseDTO"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/activities/{activityId}/comments": {
			"get": {
				"tags": [
					"Activities"
				],
				"summary": "Find comments by activity ID",
				"description": "Returns list of comments",
				"operationId": "findComments",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ActivityCommentDTO"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Activities"
				],
				"summary": "Add comment to activity",
				"operationId": "create_9",
				"parameters": [
					{
						"name": "activityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ActivityCommentSaveDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"style": "simple"
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ActivityCommentDTO"
								}
							}
						}
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/web-leads/{webLeadId}": {
			"get": {
				"tags": [
					"Web Leads"
				],
				"summary": "Find Web Lead by ID",
				"description": "Returns a single Web Lead",
				"operationId": "findById",
				"parameters": [
					{
						"name": "webLeadId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WebLeadResponseDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/users": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "List of users",
				"operationId": "list",
				"parameters": [
					{
						"name": "enabled",
						"in": "query",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UserResponseDTO"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/users/{userId}": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Find user by ID",
				"description": "Returns a single user",
				"operationId": "findById_1",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/users/me": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get token user",
				"description": "Returns a single token user",
				"operationId": "me",
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/users/by-username/{username}": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Find user by username",
				"description": "Returns a single user",
				"operationId": "findByUsername",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales": {
			"get": {
				"tags": [
					"Sales"
				],
				"summary": "Page of sales",
				"operationId": "page_1",
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"IN_PROGRESS",
								"WON",
								"LOST"
							]
						}
					},
					{
						"name": "fromDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SalePageDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales/{saleId}": {
			"get": {
				"tags": [
					"Sales"
				],
				"summary": "Find sale by ID",
				"description": "Returns a single sale",
				"operationId": "findSaleById",
				"parameters": [
					{
						"name": "saleId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SaleResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales/{saleId}/users": {
			"get": {
				"tags": [
					"Sales"
				],
				"summary": "Find sale users for a sale ID",
				"description": "Returns the users from a single sale",
				"operationId": "findUsersBySaleId",
				"parameters": [
					{
						"name": "saleId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SaleUserResponseDTO"
									}
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales/{saleId}/files": {
			"get": {
				"tags": [
					"Sales"
				],
				"summary": "Find sale files for a sale ID",
				"description": "Returns the files from a single sale",
				"operationId": "findSaleFilesById",
				"parameters": [
					{
						"name": "saleId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SaleFileResponseDTO"
									}
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales/{saleId}/dates": {
			"get": {
				"tags": [
					"Sales"
				],
				"summary": "Find sale additional dates for a sale ID",
				"description": "Returns the additional dates from a single sale",
				"operationId": "findDatesBySaleId",
				"parameters": [
					{
						"name": "saleId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SaleAdditionalDateResponseDTO"
									}
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales/{saleId}/collaborators": {
			"get": {
				"tags": [
					"Sales"
				],
				"summary": "Find sale collaborators for a sale ID",
				"description": "Returns the collaborators from a single sale",
				"operationId": "findCollaboratorsBySaleId",
				"parameters": [
					{
						"name": "saleId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/SaleCollaboratorResponseDTO"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales/stages": {
			"get": {
				"tags": [
					"Sale Stages"
				],
				"summary": "List of all available sale stages for the user",
				"operationId": "findAll",
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/sales/by-code/{code}": {
			"get": {
				"tags": [
					"Sales"
				],
				"summary": "Find sale by Code",
				"description": "Returns a single sale",
				"operationId": "findSaleByCode",
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SaleResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/htmls": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds all HTML snippets for a property",
				"description": "Returns a list of HTML snippets",
				"operationId": "findHtmls",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyHtmlDTO"
									}
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/htmls/{htmlId}": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds a HTML snippet from a property",
				"description": "Returns a single HTML snippet",
				"operationId": "findHtml",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "htmlId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyHtmlDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/{propertyId}/descriptions": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds all descriptions for a property",
				"description": "Returns a list of descriptions",
				"operationId": "findDescriptions",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyDescriptionDTO"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/types": {
			"get": {
				"tags": [
					"Property Types"
				],
				"summary": "List of property types",
				"operationId": "list_1",
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyTypeDTO"
									}
								}
							}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/types/{typeId}": {
			"get": {
				"tags": [
					"Property Types"
				],
				"summary": "Get property type by id",
				"operationId": "findById_3",
				"parameters": [
					{
						"name": "typeId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyTypeDTO"
								}
							}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/tags": {
			"get": {
				"tags": [
					"Property Tags"
				],
				"summary": "List of property tags",
				"operationId": "list_2",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/features": {
			"get": {
				"tags": [
					"Property Features"
				],
				"summary": "List of property features",
				"operationId": "list_3",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyFeatureDTO"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/features/custom": {
			"get": {
				"tags": [
					"Property Features"
				],
				"summary": "List of custom property features",
				"operationId": "list_4",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyCustomFeatDTO"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/features/by-code/{code}": {
			"get": {
				"tags": [
					"Property Features"
				],
				"summary": "Get property feature by code",
				"operationId": "findByCode",
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyFeatureDTO"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/categories": {
			"get": {
				"tags": [
					"Property Categories"
				],
				"summary": "List of property categories",
				"operationId": "list_5",
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/PropertyCategoryDTO"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/categories/{categoryId}": {
			"get": {
				"tags": [
					"Property Categories"
				],
				"summary": "Get property category by id",
				"operationId": "findById_4",
				"parameters": [
					{
						"name": "categoryId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyCategoryDTO"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/properties/by-reference/{reference}": {
			"get": {
				"tags": [
					"Properties"
				],
				"summary": "Finds a property by reference",
				"description": "Returns a single property",
				"operationId": "findByReference",
				"parameters": [
					{
						"name": "reference",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PropertyResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/subareas/{subareaId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "Finds a subarea by ID",
				"description": "Returns a single subarea",
				"operationId": "findById_5",
				"parameters": [
					{
						"name": "subareaId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocationSubareaResponseDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/subareas/by-area/{areaId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "List of subareas",
				"description": "Returns a list of subareas belonging to an area",
				"operationId": "list_6",
				"parameters": [
					{
						"name": "areaId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/LocationSubareaResponseDTO"
									}
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/provinces/{provinceId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "Finds a province by ID",
				"description": "Returns a single province",
				"operationId": "findById_6",
				"parameters": [
					{
						"name": "provinceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocationProvinceResponseDTO"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/provinces/by-country/{countryIso}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "List of provinces",
				"description": "Returns a list of provinces belonging to a country",
				"operationId": "list_7",
				"parameters": [
					{
						"name": "countryIso",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/LocationProvinceResponseDTO"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/countries": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "List of countries",
				"operationId": "list_8",
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/CountryResponseDTO"
									}
								}
							}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/countries/{countryId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "Find country by ID",
				"description": "Returns a single country",
				"operationId": "findById_7",
				"parameters": [
					{
						"name": "countryId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CountryResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/countries/by-iso/{countryIso}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "Find country by Iso",
				"description": "Returns a single country",
				"operationId": "findByIso",
				"parameters": [
					{
						"name": "countryIso",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CountryResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/cities/{cityId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "Finds a city by ID",
				"description": "Returns a single city",
				"operationId": "findById_8",
				"parameters": [
					{
						"name": "cityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocationCityResponseDTO"
								}
							}
						}
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/cities/by-province/{provinceId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "List of cities",
				"description": "Returns a list of cities belonging to a province",
				"operationId": "list_9",
				"parameters": [
					{
						"name": "provinceId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/LocationCityResponseDTO"
									}
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/areas/{areaId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "Finds an area by ID",
				"description": "Returns a single area",
				"operationId": "findById_9",
				"parameters": [
					{
						"name": "areaId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocationAreaResponseDTO"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/locations/areas/by-city/{cityId}": {
			"get": {
				"tags": [
					"Locations"
				],
				"summary": "List of areas",
				"description": "Returns a list of areas belonging to a city",
				"operationId": "list_10",
				"parameters": [
					{
						"name": "cityId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/LocationAreaResponseDTO"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/events": {
			"get": {
				"tags": [
					"Events"
				],
				"summary": "Page of events",
				"operationId": "page_3",
				"parameters": [
					{
						"name": "fromStart",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toStart",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromEnd",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toEnd",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CalendarEventPageDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/events/{eventId}": {
			"get": {
				"tags": [
					"Events"
				],
				"summary": "Find event by ID",
				"description": "Returns a single event",
				"operationId": "findById_10",
				"parameters": [
					{
						"name": "eventId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CalendarEventResponseDTO"
								}
							}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/events/by-user/{username}": {
			"get": {
				"tags": [
					"Events"
				],
				"summary": "Find events related to a user",
				"description": "Returns a page of events related to a user",
				"operationId": "findEventsByUser",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CalendarEventPageDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/events/by-contact/{contactId}": {
			"get": {
				"tags": [
					"Events"
				],
				"summary": "Find events related to a contact",
				"description": "Returns a page of events related to a contact",
				"operationId": "findEventsByContactId",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CalendarEventPageDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/enquiries": {
			"get": {
				"tags": [
					"Enquiries"
				],
				"summary": "Page of enquiries",
				"operationId": "page_4",
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"ACTIVE",
									"LOST",
									"WON"
								]
							}
						}
					},
					{
						"name": "transactionType",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"SALE",
								"RENT_SHORTTERM",
								"RENT_LONGTERM"
							]
						}
					},
					{
						"name": "fromDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EnquiryPageDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/enquiries/{enquiryId}": {
			"get": {
				"tags": [
					"Enquiries"
				],
				"summary": "Find enquiry by ID",
				"description": "Returns a single enquiry",
				"operationId": "findById_11",
				"parameters": [
					{
						"name": "enquiryId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EnquiryResponseDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/enquiries/by-contact/{contactId}": {
			"get": {
				"tags": [
					"Enquiries"
				],
				"summary": "Find enquiries by contact ID",
				"description": "Returns a page of enquiries",
				"operationId": "findByContactId",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EnquiryPageDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/tags": {
			"get": {
				"tags": [
					"Contacts Tags"
				],
				"summary": "List of contacts tags",
				"operationId": "list_11",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/sources": {
			"get": {
				"tags": [
					"Contacts Sources"
				],
				"summary": "List of contacts sources",
				"operationId": "list_12",
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ContactSourceResponseDTO"
									}
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/contacts/lead-status": {
			"get": {
				"tags": [
					"Contacts Lead Status"
				],
				"summary": "List of contacts lead status",
				"operationId": "list_13",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/bookings": {
			"get": {
				"tags": [
					"Bookings"
				],
				"summary": "Page of bookings",
				"operationId": "page_6",
				"parameters": [
					{
						"name": "fromDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateCreated",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "toDateModified",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "fromDateStart",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "toDateStart",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "fromDateEnd",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "toDateEnd",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookingPageDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/bookings/{bookingId}": {
			"get": {
				"tags": [
					"Bookings"
				],
				"summary": "Find booking by ID",
				"description": "Returns a single booking",
				"operationId": "findBookingById",
				"parameters": [
					{
						"name": "bookingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookingResponseDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/bookings/{bookingId}/check-out": {
			"get": {
				"tags": [
					"Bookings"
				],
				"summary": "Find the booking's check-out event",
				"description": "Returns the booking's check-out event",
				"operationId": "findBookingCheckOutEventById",
				"parameters": [
					{
						"name": "bookingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookingEventDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/bookings/{bookingId}/check-in": {
			"get": {
				"tags": [
					"Bookings"
				],
				"summary": "Find the booking's check-in event",
				"description": "Returns the booking's check-in event",
				"operationId": "findBookingCheckInEventById",
				"parameters": [
					{
						"name": "bookingId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookingEventDTO"
								}
							}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/bookings/by-property/{propertyId}": {
			"get": {
				"tags": [
					"Bookings"
				],
				"summary": "Find booking related to a property",
				"description": "Returns the bookings related to a property",
				"operationId": "findBookingsByPropertyId",
				"parameters": [
					{
						"name": "propertyId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookingPageDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/bookings/by-contact/{contactId}": {
			"get": {
				"tags": [
					"Bookings"
				],
				"summary": "Find booking related to a contact",
				"description": "Returns the bookings related to a contact",
				"operationId": "findBookingsByContactId",
				"parameters": [
					{
						"name": "contactId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"schema": {
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"schema": {
							"type": "integer",
							"default": 20
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookingPageDTO"
								}
							}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/bookings/by-code/{code}": {
			"get": {
				"tags": [
					"Bookings"
				],
				"summary": "Find booking by code",
				"description": "Returns a single booking",
				"operationId": "findBookingByCode",
				"parameters": [
					{
						"name": "code",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BookingResponseDTO"
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		},
		"/v1/activities/types": {
			"get": {
				"tags": [
					"Activities Types"
				],
				"summary": "List of activity types",
				"operationId": "findTypes",
				"responses": {
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {}
						}
					},
					"504": {
						"description": "Gateway timeout"
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {}
						}
					},
					"503": {
						"description": "Service unavailable"
					},
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {}
						}
					},
					"404": {
						"description": "Data not found",
						"content": {
							"application/json": {}
						}
					},
					"405": {
						"description": "Method not allowed",
						"content": {
							"application/json": {}
						}
					},
					"502": {
						"description": "Bad gateway"
					},
					"415": {
						"description": "Unsupported media type",
						"content": {
							"application/json": {}
						}
					},
					"429": {
						"description": "Rate limit exceeded",
						"content": {
							"application/json": {}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"WebLeadProcessedDTO": {
				"required": [
					"contact"
				],
				"type": "object",
				"properties": {
					"contact": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"WebLeadResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "string",
						"enum": [
							"PENDING",
							"PROCESSED"
						]
					},
					"source": {
						"type": "string"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"remoteIp": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"type": "string",
						"nullable": true
					},
					"properties": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"contact": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"archivedBy": {
						"type": "string",
						"nullable": true
					},
					"dateArchived": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				}
			},
			"PropertyUpdateDTO": {
				"required": [
					"city",
					"customFeatures",
					"dateListed",
					"dateReview",
					"features",
					"listedBy",
					"reference",
					"statusPublish",
					"statusShared",
					"tags",
					"type"
				],
				"type": "object",
				"properties": {
					"reference": {
						"maxLength": 30,
						"minLength": 2,
						"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-()]*[a-zA-Z0-9]$",
						"type": "string"
					},
					"constructYear": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"constructYearMonth": {
						"pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])$",
						"type": "string",
						"nullable": true
					},
					"renovationYear": {
						"type": "string",
						"nullable": true
					},
					"renovationYearMonth": {
						"pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])$",
						"type": "string",
						"nullable": true
					},
					"bathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"bedrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"suiteBathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"toilets": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"floors": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"level": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"mtsBuild": {
						"type": "number",
						"nullable": true
					},
					"mtsInterior": {
						"type": "number",
						"nullable": true
					},
					"mtsPlot": {
						"type": "number",
						"nullable": true
					},
					"mtsTerrace": {
						"type": "number",
						"nullable": true
					},
					"pax": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"garden": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"pool": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"garage": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL",
							"CARPORT"
						]
					},
					"parkingSpaces": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"orientation": {
						"type": "string",
						"nullable": true,
						"enum": [
							"N",
							"NE",
							"E",
							"SE",
							"S",
							"SW",
							"W",
							"NW"
						]
					},
					"community": {
						"type": "number",
						"nullable": true
					},
					"garbage": {
						"type": "number",
						"nullable": true
					},
					"ibi": {
						"type": "number",
						"nullable": true
					},
					"direct": {
						"type": "boolean"
					},
					"exclusive": {
						"type": "boolean"
					},
					"featured": {
						"type": "boolean"
					},
					"hot": {
						"type": "boolean"
					},
					"luxury": {
						"type": "boolean"
					},
					"newProperty": {
						"type": "boolean"
					},
					"special": {
						"type": "boolean"
					},
					"customFeatures": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"FEAT1",
								"FEAT2",
								"FEAT3",
								"FEAT4",
								"FEAT5",
								"FEAT6"
							]
						}
					},
					"type": {
						"type": "integer",
						"format": "int32"
					},
					"city": {
						"type": "integer",
						"format": "int32"
					},
					"area": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"subarea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"development": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"dateListed": {
						"type": "string",
						"description": "The date must be current or in the past",
						"format": "date-time"
					},
					"dateReview": {
						"type": "string",
						"description": "The date must be current or in the past",
						"format": "date-time"
					},
					"features": {
						"uniqueItems": true,
						"type": "array",
						"description": "List of property features codes",
						"items": {
							"type": "string",
							"description": "List of property features codes"
						}
					},
					"tags": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"rentShortterm": {
						"type": "boolean"
					},
					"rentLongterm": {
						"type": "boolean"
					},
					"rented": {
						"type": "boolean"
					},
					"sale": {
						"type": "boolean"
					},
					"sold": {
						"type": "boolean"
					},
					"underOffer": {
						"type": "boolean"
					},
					"rentalPriceShortterm": {
						"type": "integer",
						"description": "required if rentShortterm is true",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceShorttermVisible": {
						"type": "boolean"
					},
					"rentalPriceShorttermPeriod": {
						"type": "string",
						"description": "required if rentalPriceShortterm is not null",
						"nullable": true,
						"enum": [
							"DAY",
							"WEEK",
							"FORTNIGHT",
							"MONTH"
						]
					},
					"rentalPriceLongterm": {
						"type": "integer",
						"description": "required if rentLongterm is true",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceLongtermVisible": {
						"type": "boolean"
					},
					"salePrice": {
						"type": "integer",
						"description": "required if sale is true",
						"format": "int32",
						"nullable": true
					},
					"salePriceVisible": {
						"type": "boolean"
					},
					"salePricePrevious": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"expenses": {
						"type": "string",
						"nullable": true
					},
					"gpsPoint": {
						"type": "object",
						"properties": {
							"coordinates": {
								"maxItems": 2,
								"minItems": 2,
								"type": "array",
								"nullable": false,
								"items": {
									"type": "number",
									"nullable": false
								}
							},
							"type": {
								"type": "string",
								"description": "The geometry type",
								"nullable": false,
								"enum": [
									"Point"
								]
							}
						},
						"description": "GeoJSon geometry",
						"nullable": true,
						"externalDocs": {
							"url": "https://datatracker.ietf.org/doc/html/rfc7946#section-3"
						}
					},
					"gpsVisible": {
						"type": "boolean"
					},
					"internalNotes": {
						"type": "string",
						"nullable": true
					},
					"saleboard": {
						"type": "boolean"
					},
					"keys": {
						"type": "boolean"
					},
					"keyStatus": {
						"type": "string",
						"nullable": true,
						"enum": [
							"OFFICE",
							"VENDOR",
							"KEYHOLDER",
							"NONE"
						]
					},
					"keyscode": {
						"type": "string",
						"nullable": true
					},
					"listedBy": {
						"maxItems": 2,
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"seller": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"publicAgent": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"postcode": {
						"type": "string",
						"nullable": true
					},
					"taxes": {
						"type": "string",
						"nullable": true
					},
					"valuation": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"valuationDate": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"visitingConditions": {
						"type": "string",
						"nullable": true
					},
					"zone": {
						"type": "string",
						"nullable": true
					},
					"communitiesAdmin": {
						"type": "string",
						"nullable": true
					},
					"agreement": {
						"type": "boolean"
					},
					"copyTrashBills": {
						"type": "boolean"
					},
					"copyRegistrationProperty": {
						"type": "boolean"
					},
					"copyRegistrationCompany": {
						"type": "boolean"
					},
					"copyIbiBills": {
						"type": "boolean"
					},
					"copyNotaSimple": {
						"type": "boolean"
					},
					"copyPlans": {
						"type": "boolean"
					},
					"copyAttorney": {
						"type": "boolean"
					},
					"copyFirstOccupationLicense": {
						"type": "boolean"
					},
					"owner": {
						"type": "string",
						"nullable": true
					},
					"refCatastro": {
						"type": "string",
						"nullable": true
					},
					"register": {
						"type": "string",
						"nullable": true
					},
					"legalRepresentative": {
						"type": "string",
						"nullable": true
					},
					"copyTenSecurity": {
						"type": "boolean"
					},
					"rateableValue": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"energyIsInProcess": {
						"type": "boolean"
					},
					"energyKwLevel": {
						"type": "string",
						"nullable": true,
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"energyCo2Level": {
						"type": "string",
						"nullable": true,
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"energyKw": {
						"type": "number",
						"nullable": true
					},
					"energyCo2": {
						"type": "number",
						"nullable": true
					},
					"energyInfo": {
						"type": "string",
						"nullable": true
					},
					"touristicCode": {
						"type": "string",
						"nullable": true
					},
					"commission": {
						"type": "string",
						"description": "Comment about sales commission",
						"nullable": true
					},
					"commissionPercent": {
						"maximum": 100.00,
						"exclusiveMaximum": false,
						"minimum": 0.00,
						"exclusiveMinimum": false,
						"type": "number",
						"description": "Percentage of the total sales price, e.g. 5%. Mandatory if marked as shared",
						"nullable": true
					},
					"commissionNetworkPercent": {
						"maximum": 100.00,
						"exclusiveMaximum": false,
						"minimum": 0.00,
						"exclusiveMinimum": false,
						"type": "number",
						"description": "Percentage of commission to be shared, e.g. 50%. Mandatory if marked as shared",
						"nullable": true
					},
					"statusPublish": {
						"type": "string",
						"enum": [
							"UNPUBLISH",
							"PUBLISH",
							"OFF_MARKET"
						]
					},
					"statusShared": {
						"type": "string",
						"enum": [
							"NO_SHARED",
							"SHARED",
							"SHARED_RENT",
							"SHARED_SALES"
						]
					}
				}
			},
			"PropertyResponseDTO": {
				"required": [
					"city",
					"country",
					"currency",
					"id",
					"statusPublish",
					"statusShared",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"reference": {
						"type": "string"
					},
					"constructYear": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"constructYearMonth": {
						"type": "string",
						"nullable": true
					},
					"renovationYear": {
						"type": "string",
						"nullable": true
					},
					"renovationYearMonth": {
						"type": "string",
						"nullable": true
					},
					"bathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"bedrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"suiteBathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"toilets": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"floors": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"level": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"mtsBuild": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsInterior": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsPlot": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsTerrace": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"pax": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"garden": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"pool": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"garage": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL",
							"CARPORT"
						]
					},
					"parkingSpaces": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"orientation": {
						"type": "string",
						"nullable": true,
						"enum": [
							"N",
							"NE",
							"E",
							"SE",
							"S",
							"SW",
							"W",
							"NW"
						]
					},
					"community": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"garbage": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"ibi": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"direct": {
						"type": "boolean"
					},
					"exclusive": {
						"type": "boolean"
					},
					"featured": {
						"type": "boolean"
					},
					"hot": {
						"type": "boolean"
					},
					"luxury": {
						"type": "boolean"
					},
					"newProperty": {
						"type": "boolean"
					},
					"special": {
						"type": "boolean"
					},
					"customFeatures": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"FEAT1",
								"FEAT2",
								"FEAT3",
								"FEAT4",
								"FEAT5",
								"FEAT6"
							]
						}
					},
					"statusPublish": {
						"type": "string",
						"enum": [
							"UNPUBLISH",
							"PUBLISH",
							"OFF_MARKET"
						]
					},
					"statusShared": {
						"type": "string",
						"enum": [
							"NO_SHARED",
							"SHARED",
							"SHARED_RENT",
							"SHARED_SALES"
						]
					},
					"type": {
						"type": "integer",
						"format": "int32"
					},
					"country": {
						"type": "string"
					},
					"currency": {
						"type": "string"
					},
					"province": {
						"type": "integer",
						"format": "int32"
					},
					"city": {
						"type": "integer",
						"format": "int32"
					},
					"area": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"subarea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"development": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"createdBy": {
						"type": "string"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"dateListed": {
						"type": "string",
						"format": "date-time"
					},
					"dateReview": {
						"type": "string",
						"format": "date-time"
					},
					"features": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"rentShortterm": {
						"type": "boolean"
					},
					"rentLongterm": {
						"type": "boolean"
					},
					"rented": {
						"type": "boolean"
					},
					"sale": {
						"type": "boolean"
					},
					"sold": {
						"type": "boolean"
					},
					"underOffer": {
						"type": "boolean"
					},
					"rentalPriceShortterm": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceShorttermVisible": {
						"type": "boolean"
					},
					"rentalPriceLongterm": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceLongtermVisible": {
						"type": "boolean"
					},
					"rentalPriceShorttermPeriod": {
						"type": "string",
						"nullable": true,
						"enum": [
							"DAY",
							"WEEK",
							"FORTNIGHT",
							"MONTH"
						]
					},
					"salePrice": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"salePriceVisible": {
						"type": "boolean"
					},
					"salePricePrevious": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"expenses": {
						"type": "string",
						"nullable": true
					},
					"gpsPoint": {
						"type": "object",
						"properties": {
							"coordinates": {
								"maxItems": 2,
								"minItems": 2,
								"type": "array",
								"nullable": false,
								"items": {
									"type": "number",
									"nullable": false
								}
							},
							"type": {
								"type": "string",
								"description": "The geometry type",
								"nullable": false,
								"enum": [
									"Point"
								]
							}
						},
						"description": "GeoJSon geometry",
						"nullable": true,
						"externalDocs": {
							"url": "https://datatracker.ietf.org/doc/html/rfc7946#section-3"
						}
					},
					"gpsVisible": {
						"type": "boolean"
					},
					"internalNotes": {
						"type": "string",
						"nullable": true
					},
					"saleboard": {
						"type": "boolean"
					},
					"keys": {
						"type": "boolean"
					},
					"keyStatus": {
						"type": "string",
						"nullable": true,
						"enum": [
							"OFFICE",
							"VENDOR",
							"KEYHOLDER",
							"NONE"
						]
					},
					"keyscode": {
						"type": "string",
						"nullable": true
					},
					"listedBy": {
						"maxItems": 2,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"seller": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"publicAgent": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"postcode": {
						"type": "string",
						"nullable": true
					},
					"taxes": {
						"type": "string",
						"nullable": true
					},
					"valuation": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"valuationDate": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"visitingConditions": {
						"type": "string",
						"nullable": true
					},
					"zone": {
						"type": "string",
						"nullable": true
					},
					"communitiesAdmin": {
						"type": "string",
						"nullable": true
					},
					"agreement": {
						"type": "boolean"
					},
					"copyTrashBills": {
						"type": "boolean"
					},
					"copyRegistrationProperty": {
						"type": "boolean"
					},
					"copyRegistrationCompany": {
						"type": "boolean"
					},
					"copyIbiBills": {
						"type": "boolean"
					},
					"copyNotaSimple": {
						"type": "boolean"
					},
					"copyPlans": {
						"type": "boolean"
					},
					"copyAttorney": {
						"type": "boolean"
					},
					"copyFirstOccupationLicense": {
						"type": "boolean"
					},
					"owner": {
						"type": "string",
						"nullable": true
					},
					"refCatastro": {
						"type": "string",
						"nullable": true
					},
					"register": {
						"type": "string",
						"nullable": true
					},
					"legalRepresentative": {
						"type": "string",
						"nullable": true
					},
					"copyTenSecurity": {
						"type": "boolean"
					},
					"rateableValue": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"energyIsInProcess": {
						"type": "boolean"
					},
					"energyKwLevel": {
						"type": "string",
						"nullable": true,
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"energyCo2Level": {
						"type": "string",
						"nullable": true,
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"energyKw": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"energyCo2": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"energyInfo": {
						"type": "string",
						"nullable": true
					},
					"touristicCode": {
						"type": "string",
						"nullable": true
					},
					"commission": {
						"type": "string",
						"nullable": true
					},
					"commissionPercent": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"commissionNetworkPercent": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"commissionAmount": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"commissionNetworkAmount": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"clonedFromNetwork": {
						"type": "boolean"
					},
					"clonedFromNetworkId": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					}
				}
			},
			"PropertyLinkSaveDTO": {
				"required": [
					"name",
					"type",
					"url"
				],
				"type": "object",
				"properties": {
					"name": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"lang": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"enum": [
							"ARTICLE",
							"DOCUMENT",
							"FLOOR_PLAN",
							"MAP",
							"ONLINE_BROCHURE",
							"VIDEO",
							"VIRTUAL_TOUR"
						]
					},
					"publish": {
						"type": "boolean"
					},
					"visibleNetwork": {
						"type": "boolean"
					},
					"excludePortals": {
						"type": "boolean"
					},
					"url": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"PropertyLinkDTO": {
				"required": [
					"id",
					"name",
					"type",
					"url"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string"
					},
					"lang": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"enum": [
							"ARTICLE",
							"DOCUMENT",
							"FLOOR_PLAN",
							"MAP",
							"ONLINE_BROCHURE",
							"VIDEO",
							"VIRTUAL_TOUR"
						]
					},
					"publish": {
						"type": "boolean"
					},
					"visibleNetwork": {
						"type": "boolean"
					},
					"excludePortals": {
						"type": "boolean"
					},
					"createdBy": {
						"type": "string",
						"nullable": true
					},
					"modifiedBy": {
						"type": "string",
						"nullable": true
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"url": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"PropertyImageSaveDTO": {
				"type": "object",
				"properties": {
					"publish": {
						"type": "boolean",
						"description": "It is ignored if the main field is true or if it is the only image of the property",
						"default": false
					},
					"main": {
						"type": "boolean",
						"description": "Default true if it is the only image of the property, otherwise false",
						"default": false
					},
					"position": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					}
				}
			},
			"PropertyImageDTO": {
				"required": [
					"id",
					"url"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"url": {
						"type": "string",
						"format": "url"
					},
					"publish": {
						"type": "boolean"
					},
					"main": {
						"type": "boolean"
					},
					"position": {
						"type": "integer",
						"format": "int32"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"width": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"height": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"size": {
						"type": "integer",
						"format": "int64",
						"nullable": true
					}
				}
			},
			"PropertyFileSaveDTO": {
				"required": [
					"name",
					"type"
				],
				"type": "object",
				"properties": {
					"name": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"lang": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"enum": [
							"ARTICLE",
							"DOCUMENT",
							"FLOOR_PLAN",
							"MAP",
							"ONLINE_BROCHURE",
							"VIDEO",
							"VIRTUAL_TOUR"
						]
					},
					"publish": {
						"type": "boolean"
					},
					"visibleNetwork": {
						"type": "boolean"
					},
					"excludePortals": {
						"type": "boolean"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"PropertyFileDTO": {
				"required": [
					"id",
					"name",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string"
					},
					"lang": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"enum": [
							"ARTICLE",
							"DOCUMENT",
							"FLOOR_PLAN",
							"MAP",
							"ONLINE_BROCHURE",
							"VIDEO",
							"VIRTUAL_TOUR"
						]
					},
					"publish": {
						"type": "boolean"
					},
					"visibleNetwork": {
						"type": "boolean"
					},
					"excludePortals": {
						"type": "boolean"
					},
					"createdBy": {
						"type": "string",
						"nullable": true
					},
					"modifiedBy": {
						"type": "string",
						"nullable": true
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"url": {
						"type": "string",
						"description": "Temporal URL of file, expires in 5 minutes ",
						"format": "url"
					},
					"contentType": {
						"type": "string"
					},
					"size": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"PropertyDescriptionSaveDTO": {
				"required": [
					"mainDesc"
				],
				"type": "object",
				"properties": {
					"shortDesc": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"mainDesc": {
						"maxLength": 25000,
						"minLength": 0,
						"type": "string"
					},
					"extraDesc": {
						"maxLength": 25000,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"priceDesc": {
						"maxLength": 25000,
						"minLength": 0,
						"type": "string",
						"nullable": true
					}
				}
			},
			"PropertyDescriptionDTO": {
				"required": [
					"language",
					"mainDesc"
				],
				"type": "object",
				"properties": {
					"language": {
						"type": "string"
					},
					"shortDesc": {
						"type": "string",
						"nullable": true
					},
					"mainDesc": {
						"type": "string"
					},
					"extraDesc": {
						"type": "string",
						"nullable": true
					},
					"priceDesc": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"ContactSaveDTO": {
				"type": "object",
				"properties": {
					"assignedTo": {
						"maxItems": 2,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"assignedToTeam": {
						"type": "boolean"
					},
					"title": {
						"maxLength": 15,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"name": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"surname": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"company": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"address": {
						"maxLength": 2000,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"notes": {
						"maxLength": 25000,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"identcard": {
						"maxLength": 50,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"email": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string",
						"format": "email",
						"nullable": true
					},
					"mobile": {
						"maxLength": 50,
						"minLength": 0,
						"type": "string",
						"description": "A phone number in full international format includes a plus sign (+)",
						"nullable": true
					},
					"telephone": {
						"maxLength": 50,
						"minLength": 0,
						"type": "string",
						"description": "A phone number in full international format includes a plus sign (+)",
						"nullable": true
					},
					"fax": {
						"type": "string",
						"nullable": true
					},
					"web": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string",
						"format": "url",
						"nullable": true
					},
					"language": {
						"type": "string",
						"description": "ISO 639-1 Code, https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",
						"nullable": true
					},
					"country": {
						"type": "string",
						"description": "ISO 3166-1 alpha-2 Code, https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements",
						"nullable": true
					},
					"archived": {
						"type": "boolean"
					},
					"typeBuyer": {
						"type": "boolean"
					},
					"typeCollaborator": {
						"type": "boolean"
					},
					"typeDeveloper": {
						"type": "boolean"
					},
					"typeLawyer": {
						"type": "boolean"
					},
					"typeOwner": {
						"type": "boolean"
					},
					"typeServiceco": {
						"type": "boolean"
					},
					"typeTenantLong": {
						"type": "boolean"
					},
					"typeTenantShort": {
						"type": "boolean"
					},
					"sentBy": {
						"type": "integer",
						"description": "Contact ID collaborator",
						"format": "int32",
						"nullable": true
					},
					"sentTo": {
						"type": "integer",
						"description": "Contact ID collaborator",
						"format": "int32",
						"nullable": true
					},
					"lawyer": {
						"type": "integer",
						"description": "Contact ID lawyer",
						"format": "int32",
						"nullable": true
					},
					"source": {
						"type": "string",
						"nullable": true
					},
					"sourceDetails": {
						"type": "string",
						"nullable": true
					},
					"leadStatus": {
						"type": "string",
						"nullable": true
					},
					"saleStage": {
						"type": "string",
						"nullable": true,
						"enum": [
							"CLOSED",
							"CLOSING",
							"DISQUALIFIED",
							"LEAD_CAPTURING",
							"LISTINGMATCHING",
							"OFFERING",
							"VIEWINGS"
						]
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"allowAutoEmailDealAlert": {
						"type": "boolean"
					},
					"allowAutoEmailMarketing": {
						"type": "boolean"
					}
				}
			},
			"ContactResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"assignedTo": {
						"maxItems": 2,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"assignedToTeam": {
						"type": "boolean"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"surname": {
						"type": "string",
						"nullable": true
					},
					"company": {
						"type": "string",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"notes": {
						"type": "string",
						"nullable": true
					},
					"identcard": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"format": "email",
						"nullable": true
					},
					"mobile": {
						"type": "string",
						"nullable": true
					},
					"telephone": {
						"type": "string",
						"nullable": true
					},
					"fax": {
						"type": "string",
						"nullable": true
					},
					"web": {
						"type": "string",
						"nullable": true
					},
					"language": {
						"type": "string",
						"nullable": true
					},
					"country": {
						"type": "string",
						"nullable": true
					},
					"archived": {
						"type": "boolean"
					},
					"typeBuyer": {
						"type": "boolean"
					},
					"typeCollaborator": {
						"type": "boolean"
					},
					"typeDeveloper": {
						"type": "boolean"
					},
					"typeLawyer": {
						"type": "boolean"
					},
					"typeOwner": {
						"type": "boolean"
					},
					"typeServiceco": {
						"type": "boolean"
					},
					"typeTenantLong": {
						"type": "boolean"
					},
					"typeTenantShort": {
						"type": "boolean"
					},
					"sentBy": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"sentTo": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"lawyer": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"source": {
						"type": "string",
						"nullable": true
					},
					"sourceDetails": {
						"type": "string",
						"nullable": true
					},
					"leadStatus": {
						"type": "string",
						"nullable": true
					},
					"saleStage": {
						"type": "string",
						"nullable": true,
						"enum": [
							"CLOSED",
							"CLOSING",
							"DISQUALIFIED",
							"LEAD_CAPTURING",
							"LISTINGMATCHING",
							"OFFERING",
							"VIEWINGS"
						]
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"allowAutoEmailDealAlert": {
						"type": "boolean"
					},
					"allowAutoEmailMarketing": {
						"type": "boolean"
					}
				}
			},
			"ContactFileSaveDTO": {
				"required": [
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"ContactFileDTO": {
				"required": [
					"filename",
					"id",
					"name"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"filename": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"createdBy": {
						"type": "string",
						"nullable": true
					},
					"modifiedBy": {
						"type": "string",
						"nullable": true
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"url": {
						"type": "string",
						"description": "Temporal URL of file, expires in 5 minutes ",
						"format": "url"
					}
				}
			},
			"ContactAdditionalSaveDTO": {
				"required": [
					"address",
					"description",
					"kind"
				],
				"type": "object",
				"properties": {
					"kind": {
						"type": "string",
						"enum": [
							"EMAIL",
							"SOCIAL",
							"PHONE",
							"WEBSITE",
							"OTHER"
						]
					},
					"address": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				}
			},
			"ContactAdditionalDTO": {
				"required": [
					"address",
					"description",
					"id",
					"kind"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"kind": {
						"type": "string",
						"enum": [
							"EMAIL",
							"SOCIAL",
							"PHONE",
							"WEBSITE",
							"OTHER"
						]
					},
					"address": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				}
			},
			"ActivityPropertySaveDTO": {
				"required": [
					"propertyId"
				],
				"type": "object",
				"properties": {
					"propertyId": {
						"type": "integer",
						"format": "int32"
					},
					"comment": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"ActivitySaveDTO": {
				"required": [
					"subject",
					"type"
				],
				"type": "object",
				"properties": {
					"type": {
						"type": "string"
					},
					"subject": {
						"maxLength": 255,
						"minLength": 0,
						"type": "string"
					},
					"details": {
						"maxLength": 25000,
						"minLength": 0,
						"type": "string",
						"nullable": true
					},
					"responsible": {
						"type": "string",
						"description": "If null, the value will be the request user",
						"nullable": true
					},
					"contactMain": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"needAttention": {
						"type": "boolean",
						"deprecated": true
					},
					"users": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"contacts": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"bookings": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"developments": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"properties": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ActivityPropertySaveDTO"
						}
					}
				}
			},
			"ActivityDevelopmentDTO": {
				"type": "object",
				"properties": {
					"developmentId": {
						"type": "integer",
						"format": "int32"
					},
					"developmentReference": {
						"type": "string"
					},
					"developmentAgency": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"ActivityPropertyDTO": {
				"type": "object",
				"properties": {
					"comment": {
						"type": "string",
						"nullable": true
					},
					"propertyId": {
						"type": "integer",
						"format": "int32"
					},
					"propertyReference": {
						"type": "string"
					},
					"propertyAgency": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"ActivityResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"type": {
						"type": "string"
					},
					"subject": {
						"type": "string"
					},
					"details": {
						"type": "string",
						"nullable": true
					},
					"needAttention": {
						"type": "boolean",
						"deprecated": true
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"createdBy": {
						"type": "string"
					},
					"modifiedBy": {
						"type": "string"
					},
					"responsible": {
						"type": "string"
					},
					"contactMain": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"event": {
						"type": "integer",
						"format": "int32",
						"nullable": true,
						"deprecated": true
					},
					"contacts": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"users": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"bookings": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"developments": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ActivityDevelopmentDTO"
						}
					},
					"properties": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ActivityPropertyDTO"
						}
					}
				}
			},
			"ActivityEventSaveDTO": {
				"required": [
					"allDay",
					"timezone"
				],
				"type": "object",
				"properties": {
					"startDateTime": {
						"type": "string",
						"description": "Required if allDay is false",
						"format": "date-time",
						"nullable": true
					},
					"endDateTime": {
						"type": "string",
						"description": "Required if allDay is false",
						"format": "date-time",
						"nullable": true
					},
					"startDate": {
						"type": "string",
						"description": "Required if allDay is true",
						"format": "date",
						"nullable": true
					},
					"endDate": {
						"type": "string",
						"description": "Required if allDay is true",
						"format": "date",
						"nullable": true
					},
					"timezone": {
						"type": "string",
						"example": "Europe/Madrid"
					},
					"allDay": {
						"type": "boolean"
					},
					"reminder": {
						"type": "string",
						"nullable": true,
						"enum": [
							"MINUTES_30",
							"HOUR_1",
							"HOURS_2",
							"DAY_1",
							"DAYS_3",
							"DAYS_7",
							"DAYS_15",
							"DAYS_30"
						]
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"ActivityEventDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"startUTC": {
						"type": "string",
						"format": "date-time"
					},
					"endUTC": {
						"type": "string",
						"format": "date-time"
					},
					"startDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"endDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"startDate": {
						"type": "string",
						"format": "date"
					},
					"endDate": {
						"type": "string",
						"format": "date"
					},
					"timezone": {
						"type": "string"
					},
					"allDay": {
						"type": "boolean"
					},
					"reminderMinutes": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"WebLeadCreateDTO": {
				"required": [
					"source"
				],
				"type": "object",
				"properties": {
					"source": {
						"type": "string",
						"format": "uri"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"format": "email",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"remoteIp": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"type": "string",
						"nullable": true
					},
					"properties": {
						"type": "array",
						"nullable": true,
						"items": {
							"type": "string",
							"nullable": true
						}
					},
					"contact": {
						"type": "integer",
						"description": "If contact is setted, the web-lead will be archived and assigned to the contact",
						"format": "int32",
						"nullable": true
					}
				}
			},
			"PropertyCreateDTO": {
				"required": [
					"city",
					"customFeatures",
					"dateListed",
					"dateReview",
					"features",
					"listedBy",
					"reference",
					"tags",
					"type"
				],
				"type": "object",
				"properties": {
					"reference": {
						"maxLength": 30,
						"minLength": 2,
						"pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-()]*[a-zA-Z0-9]$",
						"type": "string"
					},
					"constructYear": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"constructYearMonth": {
						"pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])$",
						"type": "string",
						"nullable": true
					},
					"renovationYear": {
						"type": "string",
						"nullable": true
					},
					"renovationYearMonth": {
						"pattern": "^[12][0-9]{3}-(?:0[1-9]|1[0-2])$",
						"type": "string",
						"nullable": true
					},
					"bathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"bedrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"suiteBathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"toilets": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"floors": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"level": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"mtsBuild": {
						"type": "number",
						"nullable": true
					},
					"mtsInterior": {
						"type": "number",
						"nullable": true
					},
					"mtsPlot": {
						"type": "number",
						"nullable": true
					},
					"mtsTerrace": {
						"type": "number",
						"nullable": true
					},
					"pax": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"garden": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"pool": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"garage": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL",
							"CARPORT"
						]
					},
					"parkingSpaces": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"orientation": {
						"type": "string",
						"nullable": true,
						"enum": [
							"N",
							"NE",
							"E",
							"SE",
							"S",
							"SW",
							"W",
							"NW"
						]
					},
					"community": {
						"type": "number",
						"nullable": true
					},
					"garbage": {
						"type": "number",
						"nullable": true
					},
					"ibi": {
						"type": "number",
						"nullable": true
					},
					"direct": {
						"type": "boolean"
					},
					"exclusive": {
						"type": "boolean"
					},
					"featured": {
						"type": "boolean"
					},
					"hot": {
						"type": "boolean"
					},
					"luxury": {
						"type": "boolean"
					},
					"newProperty": {
						"type": "boolean"
					},
					"special": {
						"type": "boolean"
					},
					"customFeatures": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"FEAT1",
								"FEAT2",
								"FEAT3",
								"FEAT4",
								"FEAT5",
								"FEAT6"
							]
						}
					},
					"type": {
						"type": "integer",
						"format": "int32"
					},
					"city": {
						"type": "integer",
						"format": "int32"
					},
					"area": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"subarea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"development": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"dateListed": {
						"type": "string",
						"description": "The date must be current or in the past",
						"format": "date-time"
					},
					"dateReview": {
						"type": "string",
						"description": "The date must be current or in the past",
						"format": "date-time"
					},
					"features": {
						"uniqueItems": true,
						"type": "array",
						"description": "List of property features codes",
						"items": {
							"type": "string",
							"description": "List of property features codes"
						}
					},
					"tags": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"rentShortterm": {
						"type": "boolean"
					},
					"rentLongterm": {
						"type": "boolean"
					},
					"rented": {
						"type": "boolean"
					},
					"sale": {
						"type": "boolean"
					},
					"sold": {
						"type": "boolean"
					},
					"underOffer": {
						"type": "boolean"
					},
					"rentalPriceShortterm": {
						"type": "integer",
						"description": "required if rentShortterm is true",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceShorttermVisible": {
						"type": "boolean"
					},
					"rentalPriceShorttermPeriod": {
						"type": "string",
						"description": "required if rentalPriceShortterm is not null",
						"nullable": true,
						"enum": [
							"DAY",
							"WEEK",
							"FORTNIGHT",
							"MONTH"
						]
					},
					"rentalPriceLongterm": {
						"type": "integer",
						"description": "required if rentLongterm is true",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceLongtermVisible": {
						"type": "boolean"
					},
					"salePrice": {
						"type": "integer",
						"description": "required if sale is true",
						"format": "int32",
						"nullable": true
					},
					"salePriceVisible": {
						"type": "boolean"
					},
					"salePricePrevious": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"expenses": {
						"type": "string",
						"nullable": true
					},
					"gpsPoint": {
						"type": "object",
						"properties": {
							"coordinates": {
								"maxItems": 2,
								"minItems": 2,
								"type": "array",
								"nullable": false,
								"items": {
									"type": "number",
									"nullable": false
								}
							},
							"type": {
								"type": "string",
								"description": "The geometry type",
								"nullable": false,
								"enum": [
									"Point"
								]
							}
						},
						"description": "GeoJSon geometry",
						"nullable": true,
						"externalDocs": {
							"url": "https://datatracker.ietf.org/doc/html/rfc7946#section-3"
						}
					},
					"gpsVisible": {
						"type": "boolean"
					},
					"internalNotes": {
						"type": "string",
						"nullable": true
					},
					"saleboard": {
						"type": "boolean"
					},
					"keys": {
						"type": "boolean"
					},
					"keyStatus": {
						"type": "string",
						"nullable": true,
						"enum": [
							"OFFICE",
							"VENDOR",
							"KEYHOLDER",
							"NONE"
						]
					},
					"keyscode": {
						"type": "string",
						"nullable": true
					},
					"listedBy": {
						"maxItems": 2,
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"seller": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"publicAgent": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"postcode": {
						"type": "string",
						"nullable": true
					},
					"taxes": {
						"type": "string",
						"nullable": true
					},
					"valuation": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"valuationDate": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"visitingConditions": {
						"type": "string",
						"nullable": true
					},
					"zone": {
						"type": "string",
						"nullable": true
					},
					"communitiesAdmin": {
						"type": "string",
						"nullable": true
					},
					"agreement": {
						"type": "boolean"
					},
					"copyTrashBills": {
						"type": "boolean"
					},
					"copyRegistrationProperty": {
						"type": "boolean"
					},
					"copyRegistrationCompany": {
						"type": "boolean"
					},
					"copyIbiBills": {
						"type": "boolean"
					},
					"copyNotaSimple": {
						"type": "boolean"
					},
					"copyPlans": {
						"type": "boolean"
					},
					"copyAttorney": {
						"type": "boolean"
					},
					"copyFirstOccupationLicense": {
						"type": "boolean"
					},
					"owner": {
						"type": "string",
						"nullable": true
					},
					"refCatastro": {
						"type": "string",
						"nullable": true
					},
					"register": {
						"type": "string",
						"nullable": true
					},
					"legalRepresentative": {
						"type": "string",
						"nullable": true
					},
					"copyTenSecurity": {
						"type": "boolean"
					},
					"rateableValue": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"energyIsInProcess": {
						"type": "boolean"
					},
					"energyKwLevel": {
						"type": "string",
						"nullable": true,
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"energyCo2Level": {
						"type": "string",
						"nullable": true,
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G"
						]
					},
					"energyKw": {
						"type": "number",
						"nullable": true
					},
					"energyCo2": {
						"type": "number",
						"nullable": true
					},
					"energyInfo": {
						"type": "string",
						"nullable": true
					},
					"touristicCode": {
						"type": "string",
						"nullable": true
					},
					"commission": {
						"type": "string",
						"description": "Comment about sales commission",
						"nullable": true
					},
					"commissionPercent": {
						"maximum": 100.00,
						"exclusiveMaximum": false,
						"minimum": 0.00,
						"exclusiveMinimum": false,
						"type": "number",
						"description": "Percentage of the total sales price, e.g. 5%. Mandatory if marked as shared",
						"nullable": true
					},
					"commissionNetworkPercent": {
						"maximum": 100.00,
						"exclusiveMaximum": false,
						"minimum": 0.00,
						"exclusiveMinimum": false,
						"type": "number",
						"description": "Percentage of commission to be shared, e.g. 50%. Mandatory if marked as shared",
						"nullable": true
					}
				}
			},
			"PropertyImageUploadDTO": {
				"required": [
					"file"
				],
				"type": "object",
				"properties": {
					"file": {
						"type": "string",
						"format": "binary"
					},
					"publish": {
						"type": "boolean",
						"description": "It is ignored if the main field is true or if it is the only image of the property",
						"default": false
					},
					"main": {
						"type": "boolean",
						"description": "Default true if it is the only image of the property, otherwise false",
						"default": false
					},
					"position": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"PropertyFileUploadDTO": {
				"required": [
					"file"
				],
				"type": "object",
				"properties": {
					"file": {
						"type": "string",
						"format": "binary"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"lang": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"nullable": true,
						"enum": [
							"ARTICLE",
							"DOCUMENT",
							"FLOOR_PLAN",
							"MAP",
							"ONLINE_BROCHURE",
							"VIDEO",
							"VIRTUAL_TOUR"
						]
					},
					"publish": {
						"type": "boolean"
					},
					"visibleNetwork": {
						"type": "boolean"
					},
					"excludePortals": {
						"type": "boolean"
					}
				}
			},
			"ContactFileUploadDTO": {
				"required": [
					"file"
				],
				"type": "object",
				"properties": {
					"file": {
						"type": "string",
						"format": "binary"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				}
			},
			"ActivityCommentSaveDTO": {
				"required": [
					"comment"
				],
				"type": "object",
				"properties": {
					"comment": {
						"type": "string"
					}
				}
			},
			"ActivityCommentDTO": {
				"type": "object",
				"properties": {
					"user": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"comment": {
						"type": "string"
					}
				}
			},
			"JsonPatchOperation": {
				"required": [
					"op",
					"path"
				],
				"type": "object",
				"properties": {
					"op": {
						"type": "string",
						"description": "The operation to be performed",
						"example": "replace",
						"enum": [
							"add",
							"remove",
							"replace",
							"move",
							"copy",
							"test"
						]
					},
					"path": {
						"type": "string",
						"description": "A JSON-Pointer",
						"example": "/name"
					},
					"value": {
						"description": "The value to be used within the operations",
						"nullable": true,
						"example": "Foo",
						"anyOf": [
							{
								"type": "string",
								"nullable": true
							},
							{
								"type": "number",
								"nullable": true
							},
							{
								"type": "boolean",
								"nullable": true
							},
							{
								"type": "object",
								"nullable": true
							},
							{
								"type": "array",
								"nullable": true,
								"items": {
									"$ref": "#/components/schemas/JsonPatchOperation/properties/value"
								}
							}
						]
					}
				}
			},
			"WebLeadPageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/WebLeadResponseDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"UserResponseDTO": {
				"required": [
					"company",
					"email",
					"language",
					"mobile",
					"name",
					"phone",
					"position",
					"surname",
					"timezone",
					"username"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"username": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"surname": {
						"type": "string"
					},
					"company": {
						"type": "string",
						"nullable": true
					},
					"position": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"mobile": {
						"type": "string",
						"nullable": true
					},
					"language": {
						"type": "string"
					},
					"timezone": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					}
				}
			},
			"SalePageContentDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"buyer": {
						"type": "integer",
						"format": "int32"
					},
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"currency": {
						"type": "string"
					},
					"mode": {
						"type": "string",
						"enum": [
							"EXACT",
							"PERCENTAGE"
						]
					},
					"commissionAmount": {
						"type": "number",
						"format": "double"
					},
					"commissionPercent": {
						"type": "number",
						"format": "double"
					},
					"profit": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"dateNotary": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"date": {
						"type": "string",
						"format": "date"
					},
					"dateClosed": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"propertyCountry": {
						"type": "string"
					},
					"propertyCity": {
						"type": "integer",
						"format": "int32"
					},
					"propertyArea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"propertySubarea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"modifiedBy": {
						"type": "string"
					},
					"askingPrice": {
						"type": "integer",
						"format": "int32"
					},
					"salePrice": {
						"type": "number",
						"format": "double"
					},
					"propertyBathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"propertyBedrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"property": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"propertyReference": {
						"type": "string"
					},
					"propertyCadastralReference": {
						"type": "string",
						"nullable": true
					},
					"propertyType": {
						"type": "integer",
						"format": "int32"
					},
					"responsible": {
						"type": "string"
					},
					"seller": {
						"type": "integer",
						"format": "int32"
					},
					"stage": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"IN_PROGRESS",
							"WON",
							"LOST"
						]
					}
				}
			},
			"SalePageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/SalePageContentDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"SaleResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"buyer": {
						"type": "integer",
						"format": "int32"
					},
					"buyerLawyer": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"buyerNotes": {
						"type": "string",
						"nullable": true
					},
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"currency": {
						"type": "string"
					},
					"mode": {
						"type": "string",
						"enum": [
							"EXACT",
							"PERCENTAGE"
						]
					},
					"commissionAmount": {
						"type": "number",
						"format": "double"
					},
					"commissionPercent": {
						"type": "number",
						"format": "double"
					},
					"profit": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"dateNotary": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"date": {
						"type": "string",
						"format": "date"
					},
					"dateClosed": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"propertyCountry": {
						"type": "string"
					},
					"propertyCity": {
						"type": "integer",
						"format": "int32"
					},
					"propertyArea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"propertySubarea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"modifiedBy": {
						"type": "string"
					},
					"askingPrice": {
						"type": "integer",
						"format": "int32"
					},
					"salePrice": {
						"type": "number",
						"format": "double"
					},
					"propertyBathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"propertyBedrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"property": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"propertyAddress": {
						"type": "string",
						"nullable": true
					},
					"propertyReference": {
						"type": "string"
					},
					"propertyCadastralReference": {
						"type": "string",
						"nullable": true
					},
					"propertyType": {
						"type": "integer",
						"format": "int32"
					},
					"responsible": {
						"type": "string"
					},
					"seller": {
						"type": "integer",
						"format": "int32"
					},
					"sellerLawyer": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"sellerNotes": {
						"type": "string",
						"nullable": true
					},
					"notes": {
						"type": "string",
						"nullable": true
					},
					"stage": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"IN_PROGRESS",
							"WON",
							"LOST"
						]
					},
					"lostReason": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"SaleUserResponseDTO": {
				"type": "object",
				"properties": {
					"user": {
						"type": "string"
					},
					"commissionAmount": {
						"type": "number",
						"format": "double"
					},
					"commissionPercent": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mode": {
						"type": "string",
						"enum": [
							"EXACT",
							"PERCENTAGE"
						]
					},
					"notes": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"SaleFileResponseDTO": {
				"type": "object",
				"properties": {
					"description": {
						"type": "string",
						"nullable": true
					},
					"url": {
						"type": "string",
						"description": "Temporal URL of file, expires in 5 minutes ",
						"format": "url"
					},
					"name": {
						"type": "string"
					},
					"size": {
						"type": "integer",
						"format": "int64"
					},
					"createdBy": {
						"type": "string"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"SaleAdditionalDateResponseDTO": {
				"type": "object",
				"properties": {
					"date": {
						"type": "string",
						"format": "date"
					},
					"concept": {
						"type": "string"
					},
					"amount": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					}
				}
			},
			"SaleCollaboratorResponseDTO": {
				"type": "object",
				"properties": {
					"contact": {
						"type": "integer",
						"format": "int32"
					},
					"commissionAmount": {
						"type": "number",
						"format": "double"
					},
					"commissionPercent": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mode": {
						"type": "string",
						"enum": [
							"EXACT",
							"PERCENTAGE"
						]
					},
					"notes": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"PropertyPageContentDTO": {
				"required": [
					"city",
					"country",
					"createdBy",
					"currency",
					"dateCreated",
					"dateModified",
					"id",
					"modifiedBy",
					"province",
					"reference",
					"statusPublish",
					"statusShared",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"reference": {
						"type": "string"
					},
					"bathrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"bedrooms": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"mtsBuild": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsInterior": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsPlot": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsTerrace": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"statusPublish": {
						"type": "string",
						"enum": [
							"UNPUBLISH",
							"PUBLISH",
							"OFF_MARKET"
						]
					},
					"statusShared": {
						"type": "string",
						"enum": [
							"NO_SHARED",
							"SHARED",
							"SHARED_RENT",
							"SHARED_SALES"
						]
					},
					"type": {
						"type": "integer",
						"format": "int32"
					},
					"country": {
						"type": "string"
					},
					"currency": {
						"type": "string"
					},
					"province": {
						"type": "integer",
						"format": "int32"
					},
					"city": {
						"type": "integer",
						"format": "int32"
					},
					"area": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"subarea": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"modifiedBy": {
						"type": "string"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"dateListed": {
						"type": "string",
						"format": "date-time"
					},
					"dateReview": {
						"type": "string",
						"format": "date-time"
					},
					"rentShortterm": {
						"type": "boolean"
					},
					"rentLongterm": {
						"type": "boolean"
					},
					"sale": {
						"type": "boolean"
					},
					"rentalPriceShortterm": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceShorttermVisible": {
						"type": "boolean"
					},
					"rentalPriceLongterm": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"rentalPriceLongtermVisible": {
						"type": "boolean"
					},
					"rentalPriceShorttermPeriod": {
						"type": "string",
						"nullable": true,
						"enum": [
							"DAY",
							"WEEK",
							"FORTNIGHT",
							"MONTH"
						]
					},
					"salePrice": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"salePriceVisible": {
						"type": "boolean"
					},
					"rented": {
						"type": "boolean"
					},
					"sold": {
						"type": "boolean"
					},
					"underOffer": {
						"type": "boolean"
					}
				}
			},
			"PropertyPageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PropertyPageContentDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"PropertyHtmlDTO": {
				"required": [
					"code",
					"id",
					"name",
					"type"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string"
					},
					"lang": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"enum": [
							"ARTICLE",
							"DOCUMENT",
							"FLOOR_PLAN",
							"MAP",
							"ONLINE_BROCHURE",
							"VIDEO",
							"VIRTUAL_TOUR"
						]
					},
					"publish": {
						"type": "boolean"
					},
					"visibleNetwork": {
						"type": "boolean"
					},
					"excludePortals": {
						"type": "boolean"
					},
					"createdBy": {
						"type": "string",
						"nullable": true
					},
					"modifiedBy": {
						"type": "string",
						"nullable": true
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"code": {
						"type": "string"
					}
				}
			},
			"PropertyTypeDTO": {
				"required": [
					"category",
					"id",
					"name"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string"
					},
					"category": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"PropertyFeatureDTO": {
				"required": [
					"code",
					"name",
					"type"
				],
				"type": "object",
				"properties": {
					"code": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"CLIMATE_CONTROL",
							"CONDITION",
							"FURNITURE",
							"GENERAL",
							"ROOMS",
							"SECURITY",
							"VIEWS",
							"LOCATION"
						]
					},
					"name": {
						"type": "string"
					}
				}
			},
			"PropertyCustomFeatDTO": {
				"required": [
					"code",
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string",
						"enum": [
							"FEAT1",
							"FEAT2",
							"FEAT3",
							"FEAT4",
							"FEAT5",
							"FEAT6"
						]
					}
				}
			},
			"PropertyCategoryDTO": {
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"name": {
						"type": "string"
					}
				}
			},
			"LocationSubareaResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"description": "Location ID",
						"format": "int32",
						"example": 1
					},
					"name": {
						"type": "string",
						"description": "Location name",
						"example": "Madrid"
					},
					"names": {
						"type": "array",
						"description": "Location names",
						"items": {
							"$ref": "#/components/schemas/LocationTranslateDTO"
						}
					},
					"point": {
						"type": "object",
						"properties": {
							"coordinates": {
								"maxItems": 2,
								"minItems": 2,
								"type": "array",
								"nullable": false,
								"items": {
									"type": "number",
									"nullable": false
								}
							},
							"type": {
								"type": "string",
								"description": "The geometry type",
								"nullable": false,
								"enum": [
									"Point"
								]
							}
						},
						"description": "GeoJSon geometry",
						"nullable": true,
						"externalDocs": {
							"url": "https://datatracker.ietf.org/doc/html/rfc7946#section-3"
						}
					}
				}
			},
			"LocationTranslateDTO": {
				"type": "object",
				"properties": {
					"lang": {
						"type": "string",
						"description": "Language code",
						"example": "es"
					},
					"name": {
						"type": "string"
					}
				},
				"description": "Location names"
			},
			"LocationProvinceResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"description": "Location ID",
						"format": "int32",
						"example": 1
					},
					"name": {
						"type": "string",
						"description": "Location name",
						"example": "Madrid"
					},
					"names": {
						"type": "array",
						"description": "Location names",
						"items": {
							"$ref": "#/components/schemas/LocationTranslateDTO"
						}
					}
				}
			},
			"CountryResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"description": "Location ID",
						"format": "int32",
						"example": 1
					},
					"name": {
						"type": "string",
						"description": "Location name",
						"example": "Madrid"
					},
					"names": {
						"type": "array",
						"description": "Location names",
						"items": {
							"$ref": "#/components/schemas/LocationTranslateDTO"
						}
					},
					"codeIso": {
						"type": "string",
						"description": "ISO code",
						"example": "ES"
					},
					"currency": {
						"type": "string",
						"description": "Currency",
						"example": "EUR"
					}
				}
			},
			"LocationCityResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"description": "Location ID",
						"format": "int32",
						"example": 1
					},
					"name": {
						"type": "string",
						"description": "Location name",
						"example": "Madrid"
					},
					"names": {
						"type": "array",
						"description": "Location names",
						"items": {
							"$ref": "#/components/schemas/LocationTranslateDTO"
						}
					},
					"point": {
						"type": "object",
						"properties": {
							"coordinates": {
								"maxItems": 2,
								"minItems": 2,
								"type": "array",
								"nullable": false,
								"items": {
									"type": "number",
									"nullable": false
								}
							},
							"type": {
								"type": "string",
								"description": "The geometry type",
								"nullable": false,
								"enum": [
									"Point"
								]
							}
						},
						"description": "GeoJSon geometry",
						"nullable": true,
						"externalDocs": {
							"url": "https://datatracker.ietf.org/doc/html/rfc7946#section-3"
						}
					}
				}
			},
			"LocationAreaResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"description": "Location ID",
						"format": "int32",
						"example": 1
					},
					"name": {
						"type": "string",
						"description": "Location name",
						"example": "Madrid"
					},
					"names": {
						"type": "array",
						"description": "Location names",
						"items": {
							"$ref": "#/components/schemas/LocationTranslateDTO"
						}
					},
					"point": {
						"type": "object",
						"properties": {
							"coordinates": {
								"maxItems": 2,
								"minItems": 2,
								"type": "array",
								"nullable": false,
								"items": {
									"type": "number",
									"nullable": false
								}
							},
							"type": {
								"type": "string",
								"description": "The geometry type",
								"nullable": false,
								"enum": [
									"Point"
								]
							}
						},
						"description": "GeoJSon geometry",
						"nullable": true,
						"externalDocs": {
							"url": "https://datatracker.ietf.org/doc/html/rfc7946#section-3"
						}
					}
				}
			},
			"CalendarEventPageContentDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					},
					"startUTC": {
						"type": "string",
						"format": "date-time"
					},
					"endUTC": {
						"type": "string",
						"format": "date-time"
					},
					"startDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"endDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"responsible": {
						"type": "string"
					},
					"startDate": {
						"type": "string",
						"format": "date"
					},
					"endDate": {
						"type": "string",
						"format": "date"
					},
					"timezone": {
						"type": "string"
					},
					"allDay": {
						"type": "boolean"
					},
					"reminderMinutes": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					}
				}
			},
			"CalendarEventPageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CalendarEventPageContentDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"CalendarEventResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string"
					},
					"startUTC": {
						"type": "string",
						"format": "date-time"
					},
					"endUTC": {
						"type": "string",
						"format": "date-time"
					},
					"startDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"endDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"startDate": {
						"type": "string",
						"format": "date"
					},
					"endDate": {
						"type": "string",
						"format": "date"
					},
					"responsible": {
						"type": "string"
					},
					"timezone": {
						"type": "string"
					},
					"allDay": {
						"type": "boolean"
					},
					"reminderMinutes": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"notes": {
						"type": "string",
						"nullable": true
					},
					"contacts": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"users": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"EnquiryPageContentDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"dateExpiry": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"condition": {
						"type": "string",
						"nullable": true,
						"enum": [
							"NEW_BUILD",
							"RESALE"
						]
					},
					"status": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"LOST",
							"WON"
						]
					},
					"transactionType": {
						"type": "string",
						"enum": [
							"SALE",
							"RENT_SHORTTERM",
							"RENT_LONGTERM"
						]
					},
					"alerts": {
						"type": "string",
						"enum": [
							"AUTOMATIC",
							"MANUAL"
						]
					},
					"subject": {
						"type": "string"
					},
					"responsible": {
						"type": "string"
					},
					"contact": {
						"type": "integer",
						"format": "int32"
					},
					"allowPropertyNetwork": {
						"type": "boolean"
					},
					"onlyGoodQuality": {
						"type": "boolean"
					},
					"constructYearMax": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"bathrooms": {
						"type": "string",
						"nullable": true,
						"enum": [
							"EQ_1",
							"EQ_2",
							"EQ_3",
							"EQ_4",
							"EQ_5",
							"EQ_6",
							"GTE_1",
							"GTE_2",
							"GTE_3",
							"GTE_4",
							"GTE_5",
							"GTE_6"
						]
					},
					"bedrooms": {
						"type": "string",
						"nullable": true,
						"enum": [
							"EQ_1",
							"EQ_2",
							"EQ_3",
							"EQ_4",
							"EQ_5",
							"EQ_6",
							"GTE_1",
							"GTE_2",
							"GTE_3",
							"GTE_4",
							"GTE_5",
							"GTE_6"
						]
					},
					"parkingSpaces": {
						"type": "string",
						"nullable": true,
						"enum": [
							"EQ_1",
							"EQ_2",
							"EQ_3",
							"EQ_4",
							"EQ_5",
							"EQ_6",
							"GTE_1",
							"GTE_2",
							"GTE_3",
							"GTE_4",
							"GTE_5",
							"GTE_6"
						]
					},
					"estimatedGain": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"estimatedCommission": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"priceFrom": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"priceTo": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"types": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"categories": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"currency": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"cities": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"areas": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"subareas": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"properties": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EnquiryPropertyDTO"
						}
					}
				}
			},
			"EnquiryPageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EnquiryPageContentDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"EnquiryPropertyDTO": {
				"type": "object",
				"properties": {
					"propertyId": {
						"type": "integer",
						"format": "int32"
					},
					"propertyReference": {
						"type": "string"
					}
				}
			},
			"EnquiryResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"condition": {
						"type": "string",
						"nullable": true,
						"enum": [
							"NEW_BUILD",
							"RESALE"
						]
					},
					"dateExpiry": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"status": {
						"type": "string",
						"enum": [
							"ACTIVE",
							"LOST",
							"WON"
						]
					},
					"transactionType": {
						"type": "string",
						"enum": [
							"SALE",
							"RENT_SHORTTERM",
							"RENT_LONGTERM"
						]
					},
					"alerts": {
						"type": "string",
						"enum": [
							"AUTOMATIC",
							"MANUAL"
						]
					},
					"allowPropertyNetwork": {
						"type": "boolean"
					},
					"subject": {
						"type": "string"
					},
					"notes": {
						"type": "string",
						"nullable": true
					},
					"responsible": {
						"type": "string"
					},
					"contact": {
						"type": "integer",
						"format": "int32"
					},
					"priceFrom": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"priceTo": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"types": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"categories": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"currency": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"cities": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"areas": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"subareas": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int32"
						}
					},
					"constructYearMax": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"bathrooms": {
						"type": "string",
						"nullable": true,
						"enum": [
							"EQ_1",
							"EQ_2",
							"EQ_3",
							"EQ_4",
							"EQ_5",
							"EQ_6",
							"GTE_1",
							"GTE_2",
							"GTE_3",
							"GTE_4",
							"GTE_5",
							"GTE_6"
						]
					},
					"bedrooms": {
						"type": "string",
						"nullable": true,
						"enum": [
							"EQ_1",
							"EQ_2",
							"EQ_3",
							"EQ_4",
							"EQ_5",
							"EQ_6",
							"GTE_1",
							"GTE_2",
							"GTE_3",
							"GTE_4",
							"GTE_5",
							"GTE_6"
						]
					},
					"parkingSpaces": {
						"type": "string",
						"nullable": true,
						"enum": [
							"EQ_1",
							"EQ_2",
							"EQ_3",
							"EQ_4",
							"EQ_5",
							"EQ_6",
							"GTE_1",
							"GTE_2",
							"GTE_3",
							"GTE_4",
							"GTE_5",
							"GTE_6"
						]
					},
					"garage": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL",
							"CARPORT"
						]
					},
					"garden": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"pool": {
						"type": "string",
						"nullable": true,
						"enum": [
							"YES",
							"NO",
							"PRIVATE",
							"COMMUNAL"
						]
					},
					"energy": {
						"type": "string",
						"nullable": true,
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E",
							"F",
							"G",
							"SPECIFIED",
							"IN_PROCESS"
						]
					},
					"orientations": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"UNKNOWN",
								"N",
								"NE",
								"E",
								"SE",
								"S",
								"SW",
								"W",
								"NW"
							]
						}
					},
					"mtsBuild": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsPlot": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mtsTerrace": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"estimatedGain": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"estimatedCommission": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"onlyGoodQuality": {
						"type": "boolean"
					},
					"tagsIncluded": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"tagsExcluded": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"featuresIncluded": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"featuresExcluded": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"listingTypeIncluded": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"listingTypeExcluded": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"properties": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/EnquiryPropertyDTO"
						}
					}
				}
			},
			"ContactPageContentDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"title": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"surname": {
						"type": "string",
						"nullable": true
					},
					"company": {
						"type": "string",
						"nullable": true
					},
					"address": {
						"type": "string",
						"nullable": true
					},
					"notes": {
						"type": "string",
						"nullable": true
					},
					"identcard": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"format": "email",
						"nullable": true
					},
					"mobile": {
						"type": "string",
						"nullable": true
					},
					"telephone": {
						"type": "string",
						"nullable": true
					},
					"fax": {
						"type": "string",
						"nullable": true
					},
					"web": {
						"type": "string",
						"nullable": true
					},
					"language": {
						"type": "string",
						"description": "ISO 639-1 Code, https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",
						"nullable": true
					},
					"country": {
						"type": "string",
						"description": "ISO 3166-1 alpha-2 Code, https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements",
						"nullable": true
					},
					"archived": {
						"type": "boolean"
					},
					"typeBuyer": {
						"type": "boolean"
					},
					"typeCollaborator": {
						"type": "boolean"
					},
					"typeDeveloper": {
						"type": "boolean"
					},
					"typeLawyer": {
						"type": "boolean"
					},
					"typeOwner": {
						"type": "boolean"
					},
					"typeServiceco": {
						"type": "boolean"
					},
					"typeTenantLong": {
						"type": "boolean"
					},
					"typeTenantShort": {
						"type": "boolean"
					},
					"allowAutoEmailDealAlert": {
						"type": "boolean"
					},
					"allowAutoEmailMarketing": {
						"type": "boolean"
					}
				}
			},
			"ContactPageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ContactPageContentDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"ContactSourceResponseDTO": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"details": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"BookingPageContentDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"responsible": {
						"type": "string"
					},
					"startDate": {
						"type": "string",
						"format": "date"
					},
					"endDate": {
						"type": "string",
						"format": "date"
					},
					"byOwner": {
						"type": "boolean"
					},
					"propertyId": {
						"type": "integer",
						"format": "int32"
					},
					"propertyReference": {
						"type": "string"
					},
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"contact": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"totalPrice": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"paid": {
						"type": "boolean"
					},
					"paymentDate": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"publish": {
						"type": "boolean"
					},
					"archived": {
						"type": "boolean"
					}
				}
			},
			"BookingPageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/BookingPageContentDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"BookingResponseDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"createdBy": {
						"type": "string"
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"modifiedBy": {
						"type": "string"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"responsible": {
						"type": "string"
					},
					"startDate": {
						"type": "string",
						"format": "date"
					},
					"endDate": {
						"type": "string",
						"format": "date"
					},
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"flightArrival": {
						"type": "string",
						"nullable": true
					},
					"flightDeparture": {
						"type": "string",
						"nullable": true
					},
					"byOwner": {
						"type": "boolean"
					},
					"propertyId": {
						"type": "integer",
						"format": "int32"
					},
					"propertyReference": {
						"type": "string"
					},
					"contact": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"totalPrice": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"paid": {
						"type": "boolean"
					},
					"paymentDate": {
						"type": "string",
						"format": "date",
						"nullable": true
					},
					"extraCosts": {
						"type": "string",
						"nullable": true
					},
					"payments": {
						"type": "string",
						"nullable": true
					},
					"guests": {
						"type": "string",
						"nullable": true
					},
					"notes": {
						"type": "string",
						"nullable": true
					},
					"publish": {
						"type": "boolean"
					},
					"archived": {
						"type": "boolean"
					}
				}
			},
			"BookingEventDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"startUTC": {
						"type": "string",
						"format": "date-time"
					},
					"endUTC": {
						"type": "string",
						"format": "date-time"
					},
					"startDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"endDateTime": {
						"type": "string",
						"format": "date-time"
					},
					"startDate": {
						"type": "string",
						"format": "date"
					},
					"endDate": {
						"type": "string",
						"format": "date"
					},
					"timezone": {
						"type": "string"
					},
					"allDay": {
						"type": "boolean"
					},
					"reminderMinutes": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"ActivityPageContentDTO": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int32"
					},
					"type": {
						"type": "string"
					},
					"subject": {
						"type": "string"
					},
					"details": {
						"type": "string",
						"nullable": true
					},
					"needAttention": {
						"type": "boolean",
						"deprecated": true
					},
					"dateCreated": {
						"type": "string",
						"format": "date-time"
					},
					"dateModified": {
						"type": "string",
						"format": "date-time"
					},
					"createdBy": {
						"type": "string"
					},
					"modifiedBy": {
						"type": "string"
					},
					"responsible": {
						"type": "string"
					},
					"contactMain": {
						"type": "integer",
						"format": "int32",
						"nullable": true
					},
					"event": {
						"type": "integer",
						"format": "int32",
						"nullable": true,
						"deprecated": true
					}
				}
			},
			"ActivityPageDTO": {
				"type": "object",
				"properties": {
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ActivityPageContentDTO"
						}
					},
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					}
				}
			}
		},
		"securitySchemes": {
			"authorization": {
				"type": "oauth2",
				"in": "header",
				"scheme": "bearer",
				"flows": {
					"authorizationCode": {
						"authorizationUrl": "https://auth.inmobalia.com/oauth2/authorize",
						"tokenUrl": "https://auth.inmobalia.com/oauth2/token",
						"refreshUrl": "https://auth.inmobalia.com/oauth2/token",
						"scopes": {
							"users:read": "Allow /users GET Requests",
							"contacts:read": "Allow /contacts GET Requests",
							"contacts:write": "Allow /contacts POST/PUT/PATCH Requests",
							"enquiries:read": "Allow /enquiries GET Requests",
							"web-leads:read": "Allow /web-leads GET Requests",
							"web-leads:write": "Allow /web-leads POST Requests",
							"activities:read": "Allow /activities GET Requests",
							"activities:write": "Allow /activities POST/PUT/PATCH Requests",
							"properties:read": "Allow /properties GET Requests",
							"properties:write": "Allow /properties POST/PUT/PATCH Requests",
							"sales:read": "Allow /sales GET Requests",
							"bookings:read": "Allow /bookings GET Requests",
							"events:read": "Allow /events GET Requests"
						}
					}
				}
			}
		}
	}
}